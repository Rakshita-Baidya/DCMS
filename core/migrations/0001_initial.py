# Generated by Django 5.1.4 on 2025-02-22 21:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_dental_complaint', models.CharField(blank=True, max_length=500, null=True)),
                ('marked_weight_change', models.BooleanField(default=False)),
                ('chest_pain', models.BooleanField(default=False)),
                ('hypertention', models.BooleanField(default=False)),
                ('ankle_edema', models.BooleanField(default=False)),
                ('rheumatic_fever', models.BooleanField(default=False)),
                ('rheumatic_fever_age', models.PositiveBigIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(100)])),
                ('stroke_history', models.BooleanField(default=False)),
                ('stroke_date', models.DateField(blank=True, null=True)),
                ('joint_pain', models.BooleanField(default=False)),
                ('joint_swelling', models.BooleanField(default=False)),
                ('headaches', models.BooleanField(default=False)),
                ('convulsions_or_epilepsy', models.BooleanField(default=False)),
                ('numbness_or_tingles', models.BooleanField(default=False)),
                ('dizziness_or_fainting', models.BooleanField(default=False)),
                ('jaundice', models.BooleanField(default=False)),
                ('history_of_liver_disease', models.BooleanField(default=False)),
                ('liver_disease_specifics', models.TextField(blank=True, max_length=500, null=True)),
                ('pregnancy', models.BooleanField(default=False)),
                ('pregnancy_month', models.CharField(blank=True, max_length=2, null=True)),
                ('breast_feed', models.BooleanField(default=False)),
                ('persistant_cough', models.BooleanField(default=False)),
                ('breathing_difficulty', models.BooleanField(default=False)),
                ('shortness_of_breath', models.BooleanField(default=False)),
                ('asthma', models.BooleanField(default=False)),
                ('hearing_loss', models.BooleanField(default=False)),
                ('ringing_of_ears', models.BooleanField(default=False)),
                ('bruise_easy', models.BooleanField(default=False)),
                ('anemia', models.BooleanField(default=False)),
                ('perspire_easy', models.BooleanField(default=False)),
                ('apprehension', models.BooleanField(default=False)),
                ('palpitation', models.BooleanField(default=False)),
                ('goiter', models.BooleanField(default=False)),
                ('bulging_eyes', models.BooleanField(default=False)),
                ('delayed_healing', models.BooleanField(default=False)),
                ('increased_appetite', models.BooleanField(default=False)),
                ('family_history', models.BooleanField(default=False)),
                ('radiography_therapy', models.BooleanField(default=False)),
                ('increased_frequency', models.BooleanField(default=False)),
                ('burning', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('dob', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Prefer not to say', 'Prefer not to say'), ('Other', 'Other')], default='Prefer not to say', max_length=17, null=True)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')])),
                ('age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(150)])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('telephone', models.CharField(blank=True, max_length=10, null=True)),
                ('occupation', models.CharField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, null=True)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Other', 'Other')], default='Single')),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_contact', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('emergency_contact_address', models.CharField(blank=True, max_length=150, null=True)),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=15, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('type', models.CharField(choices=[('Income', 'Income'), ('Expense', 'Expense')], default='Income')),
            ],
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('plan', models.TextField(blank=True, max_length=255, null=True)),
                ('x_ray', models.BooleanField(default=False)),
                ('x_ray_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('lab', models.BooleanField(default=False)),
                ('lab_sent', models.CharField(blank=True, choices=[('Medi Dent Nepal', 'Medi Dent Nepal'), ('Proficient Dental Lab', 'Proficient Dental Lab'), ('Other', 'Other')], null=True)),
                ('lab_order_date', models.DateTimeField(blank=True, null=True)),
                ('lab_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('treatment_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentDoctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percent', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OtherPatientHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prev_extraction', models.BooleanField(default=False)),
                ('date_of_last_extraction', models.DateField(blank=True, null=True)),
                ('untoward_reaction', models.BooleanField(default=False)),
                ('untoward_reaction_specifics', models.TextField(blank=True, max_length=500, null=True)),
                ('local_anesthesia_use', models.BooleanField(default=False)),
                ('hospitalized', models.BooleanField(default=False)),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('hospitalization_specifics', models.TextField(blank=True, max_length=500, null=True)),
                ('sleeping_pills', models.BooleanField(default=False)),
                ('aspirin', models.BooleanField(default=False)),
                ('food', models.BooleanField(default=False)),
                ('penicilin', models.BooleanField(default=False)),
                ('antibiotics', models.BooleanField(default=False)),
                ('sulfa_drugs', models.BooleanField(default=False)),
                ('local_anesthesia', models.BooleanField(default=False)),
                ('others', models.BooleanField(default=False)),
                ('specifics', models.TextField(blank=True, max_length=500, null=True)),
                ('history', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='history_other_patients', to='core.medicalhistory')),
            ],
        ),
        migrations.AddField(
            model_name='medicalhistory',
            name='patient',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient_history', to='core.patient'),
        ),
        migrations.CreateModel(
            name='DentalChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dental_chart', to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('time', models.TimeField(blank=True, max_length=25, null=True)),
                ('description', models.TextField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Cancelled', 'Cancelled'), ('Completed', 'Completed')], default='Pending')),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointment', to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('remaining_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Paid', 'Paid'), ('Overpaid', 'Overpaid')], default='Unpaid', max_length=15)),
                ('payment_method', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Card', 'Card'), ('Mobile Payment', 'Mobile Payment'), ('Bank Transfer', 'Bank Transfer'), ('Other', 'Other')], default='Cash', max_length=15, null=True)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('payment_notes', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_appointment', to='core.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='PurchasedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('total_amt', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_created', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_appointment', to='core.appointment')),
            ],
        ),
        migrations.CreateModel(
            name='ToothRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tooth_no', models.CharField(max_length=10)),
                ('condition', models.TextField(blank=True, max_length=255, null=True)),
                ('severity', models.CharField(blank=True, choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], max_length=50, null=True)),
                ('dental_chart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tooth_records', to='core.dentalchart')),
            ],
        ),
    ]
